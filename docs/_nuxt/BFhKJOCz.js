import{H as r,I as u,c as a,a as d,o as p}from"./Bbm1RNck.js";let i;const l=new Uint8Array(16);function g(){if(!i&&(i=typeof crypto<"u"&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!i))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return i(l)}const e=[];for(let n=0;n<256;++n)e.push((n+256).toString(16).slice(1));function m(n,t=0){return e[n[t+0]]+e[n[t+1]]+e[n[t+2]]+e[n[t+3]]+"-"+e[n[t+4]]+e[n[t+5]]+"-"+e[n[t+6]]+e[n[t+7]]+"-"+e[n[t+8]]+e[n[t+9]]+"-"+e[n[t+10]]+e[n[t+11]]+e[n[t+12]]+e[n[t+13]]+e[n[t+14]]+e[n[t+15]]}const y=typeof crypto<"u"&&crypto.randomUUID&&crypto.randomUUID.bind(crypto),s={randomUUID:y};function h(n,t,c){if(s.randomUUID&&!t&&!n)return s.randomUUID();n=n||{};const o=n.random||(n.rng||g)();return o[6]=o[6]&15|64,o[8]=o[8]&63|128,m(o)}const U=async()=>{const n=r(),t=u(),c=h();window.localStorage.setItem("psid",c);try{const{data:o,error:b}=await n.auth.signInWithOAuth({provider:"google",options:{queryParams:{access_type:"offline",prompt:"consent"},redirectTo:t.public.appUrl+"/post-signin?id="+c}})}catch(o){console.error(o)}},_={class:"flex w-screen h-screen justify-center items-center"},w={__name:"login",setup(n){const t=async()=>{await U()};return(c,o)=>(p(),a("div",_,[d("button",{class:"btn btn-primary",onClick:t},"Sign in with Google")]))}};export{w as default};
